{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "$ref": "#/definitions/MsgSubmitFlow",
    "definitions": {
        "MsgSubmitFlow": {
            "properties": {
                "owner": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "msgs": {
                    "items": {
                        "properties": {
                            "type_url": {
                                "type": "string",
                                "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. As of May 2023, there are no widely used type server implementations and no plans to implement one. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                            },
                            "value": {
                                "type": "string",
                                "description": "Must be a valid serialized protocol buffer of the above specified type.",
                                "format": "binary",
                                "binaryEncoding": "base64"
                            }
                        },
                        "additionalProperties": false,
                        "type": "object",
                        "title": "Any",
                        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a URL that describes the type of the serialized message. Protobuf library provides support to pack/unpack Any values in the form of utility functions or additional generated methods of the Any type. Example 1: Pack and unpack a message in C++.     Foo foo = ...;     Any any;     any.PackFrom(foo);     ...     if (any.UnpackTo(\u0026foo)) {       ...     } Example 2: Pack and unpack a message in Java.     Foo foo = ...;     Any any = Any.pack(foo);     ...     if (any.is(Foo.class)) {       foo = any.unpack(Foo.class);     }     // or ...     if (any.isSameTypeAs(Foo.getDefaultInstance())) {       foo = any.unpack(Foo.getDefaultInstance());     }  Example 3: Pack and unpack a message in Python.     foo = Foo(...)     any = Any()     any.Pack(foo)     ...     if any.Is(Foo.DESCRIPTOR):       any.Unpack(foo)       ...  Example 4: Pack and unpack a message in Go      foo := \u0026pb.Foo{...}      any, err := anypb.New(foo)      if err != nil {        ...      }      ...      foo := \u0026pb.Foo{}      if err := any.UnmarshalTo(foo); err != nil {        ...      } The pack methods provided by protobuf library will by default use 'type.googleapis.com/full.type.name' as the type URL and the unpack methods only use the fully qualified type name after the last '/' in the type URL, for example \"foo.bar.com/x/y.z\" will yield type name \"y.z\". JSON ==== The JSON representation of an `Any` value uses the regular representation of the deserialized, embedded message, with an additional field `@type` which contains the type URL. Example:     package google.profile;     message Person {       string first_name = 1;       string last_name = 2;     }     {       \"@type\": \"type.googleapis.com/google.profile.Person\",       \"firstName\": \u003cstring\u003e,       \"lastName\": \u003cstring\u003e     } If the embedded message type is well-known and has a custom JSON representation, that representation will be embedded adding a field `value` which holds the custom JSON in addition to the `@type` field. Example (for message [google.protobuf.Duration][]):     {       \"@type\": \"type.googleapis.com/google.protobuf.Duration\",       \"value\": \"1.212s\"     }"
                    },
                    "additionalProperties": false,
                    "type": "array"
                },
                "duration": {
                    "type": "string",
                    "description": "duration defines the time that the code should run for"
                },
                "start_at": {
                    "type": "string",
                    "description": "start_at when set as a unix time after block inclusion, creates a custom start time for execution"
                },
                "interval": {
                    "type": "string",
                    "description": "interval defines the interval between auto_msg calls"
                },
                "fee_funds": {
                    "items": {
                        "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
                    },
                    "additionalProperties": false,
                    "type": "array",
                    "description": "optional fees to be used for flow execution limiting the amount of fees incurred"
                },
                "configuration": {
                    "$ref": "#/definitions/intento.intent.v1.ExecutionConfiguration",
                    "additionalProperties": false,
                    "description": "optional configuration parameters"
                },
                "connection_id": {
                    "type": "string",
                    "description": "optional connection ID interchain account"
                },
                "trustless_agent_config": {
                    "$ref": "#/definitions/intento.intent.v1.TrustlessAgentConfig",
                    "additionalProperties": false,
                    "description": "optional use of a trustless excution agent"
                },
                "conditions": {
                    "$ref": "#/definitions/intento.intent.v1.ExecutionConditions",
                    "additionalProperties": false
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Msg Submit Flow",
            "description": "MsgSubmitFlow creates, submits and schedules msgs to be executed locally or over IBC with conditions"
        },
        "cosmos.base.v1beta1.Coin": {
            "properties": {
                "denom": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Coin",
            "description": "Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."
        },
        "intento.intent.v1.Comparison": {
            "properties": {
                "flow_id": {
                    "type": "string",
                    "description": "get the latest response value from other flow, optional"
                },
                "response_index": {
                    "type": "integer",
                    "description": "index of the message response, optional"
                },
                "response_key": {
                    "type": "string",
                    "description": "e.g. Amount[0].Amount, FromAddress, optional"
                },
                "value_type": {
                    "type": "string",
                    "description": "can be anything from sdk.Int, sdk.Coin, sdk.Coins, string, []string, []sdk.Int"
                },
                "operator": {
                    "enum": [
                        "EQUAL",
                        "CONTAINS",
                        "NOT_CONTAINS",
                        "SMALLER_THAN",
                        "LARGER_THAN",
                        "GREATER_EQUAL",
                        "LESS_EQUAL",
                        "STARTS_WITH",
                        "ENDS_WITH",
                        "NOT_EQUAL"
                    ],
                    "type": "string",
                    "title": "enum AfterGetValueOperator {\n   PARSE = 0;\n   MULITPLY = 1;\n   DIVIDE = 2;\n   SUBSTRACT = 3;\n   ADD = 4;\n }",
                    "description": "enum AfterGetValueOperator {   PARSE = 0;   MULITPLY = 1;   DIVIDE = 2;   SUBSTRACT = 3;   ADD = 4; }  Comparison operators that can be used for various types."
                },
                "operand": {
                    "type": "string"
                },
                "icq_config": {
                    "$ref": "#/definitions/intento.intent.v1.ICQConfig",
                    "additionalProperties": false,
                    "description": "bool calculate_difference = 7; //True: Calculate the difference with the previous value.  config of ICQ to perform"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Comparison",
            "description": "Comparison is checked on the response in JSON before execution of flow and outputs true or false"
        },
        "intento.intent.v1.ExecutionConditions": {
            "properties": {
                "feedback_loops": {
                    "items": {
                        "$ref": "#/definitions/intento.intent.v1.FeedbackLoop"
                    },
                    "additionalProperties": false,
                    "type": "array",
                    "description": "Replace value with value from message or response from another flow’s latest output"
                },
                "comparisons": {
                    "items": {
                        "$ref": "#/definitions/intento.intent.v1.Comparison"
                    },
                    "additionalProperties": false,
                    "type": "array",
                    "description": "Comparison with response response value"
                },
                "stop_on_success_of": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "optional array of dependent intents that when executing succesfully, stops execution"
                },
                "stop_on_failure_of": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "optional array of dependent intents that when not executing succesfully, stops execution"
                },
                "skip_on_failure_of": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "optional array of dependent intents that should be executed succesfully after their latest call before execution is allowed"
                },
                "skip_on_success_of": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "optional array of dependent intents that should fail after their latest call before execution is allowed"
                },
                "use_and_for_comparisons": {
                    "type": "boolean",
                    "description": "True: Use AND for combining comparisons. False: Use OR for combining comparisons."
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Execution Conditions",
            "description": "ExecutionConditions provides execution conditions for the flow"
        },
        "intento.intent.v1.ExecutionConfiguration": {
            "properties": {
                "save_responses": {
                    "type": "boolean",
                    "description": "if true, the flow response outputs are saved and can be used in logic"
                },
                "updating_disabled": {
                    "type": "boolean",
                    "description": "if true, the flow is not updatable"
                },
                "stop_on_success": {
                    "type": "boolean",
                    "description": "If true, will execute until we get a successful Flow, if false/unset will always execute"
                },
                "stop_on_failure": {
                    "type": "boolean",
                    "description": "If true, will execute until successful Flow, if false/unset will always execute"
                },
                "stop_on_timeout": {
                    "type": "boolean",
                    "description": "If true, will stop if message times oiut"
                },
                "fallback_to_owner_balance": {
                    "type": "boolean",
                    "description": "If true, owner account balance is used when trigger account funds run out"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Execution Configuration",
            "description": "ExecutionConfiguration provides the execution-related configuration of the flow"
        },
        "intento.intent.v1.FeedbackLoop": {
            "properties": {
                "flow_id": {
                    "type": "string",
                    "description": "flow to get the latest response value from, optional"
                },
                "response_index": {
                    "type": "integer",
                    "description": "index of the responses"
                },
                "response_key": {
                    "type": "string",
                    "description": "for example \"Amount\""
                },
                "msgs_index": {
                    "type": "integer",
                    "description": "index of the msg to replace"
                },
                "msg_key": {
                    "type": "string",
                    "description": "key of the message to replace (e.g. Amount[0].Amount, FromAddress)"
                },
                "value_type": {
                    "type": "string",
                    "description": "can be anything from sdk.Int, sdk.Coin, sdk.Coins, string, []string, []sdk.Int"
                },
                "icq_config": {
                    "$ref": "#/definitions/intento.intent.v1.ICQConfig",
                    "additionalProperties": false,
                    "description": "bool calculate_difference = 7; //True: calculate the difference with the previous value instead of using the value directly.  config of ICQ to perform"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Feedback Loop",
            "description": "Replace value with value from message or response from another flow’s latest output before execution"
        },
        "intento.intent.v1.ICQConfig": {
            "properties": {
                "connection_id": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "string"
                },
                "timeout_policy": {
                    "enum": [
                        "REJECT_QUERY_RESPONSE",
                        "RETRY_QUERY_REQUEST",
                        "EXECUTE_QUERY_CALLBACK"
                    ],
                    "type": "string",
                    "title": "Timeout Policy"
                },
                "timeout_duration": {
                    "pattern": "^([0-9]+\\.?[0-9]*|\\.[0-9]+)s$",
                    "type": "string",
                    "format": "regex"
                },
                "query_type": {
                    "type": "string",
                    "description": "e.g. store/bank/key store/staking/key"
                },
                "query_key": {
                    "type": "string",
                    "description": "key in the store that stores the query e.g. stakingtypes.GetValidatorKey(validatorAddressBz)"
                },
                "response": {
                    "type": "string",
                    "description": "should be reset after execution",
                    "format": "binary",
                    "binaryEncoding": "base64"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "ICQ Config",
            "description": "config for using interchain queries"
        },
        "intento.intent.v1.TrustlessAgentConfig": {
            "properties": {
                "agent_address": {
                    "type": "string"
                },
                "fee_coin_limit": {
                    "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
                    "additionalProperties": false
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Trustless Agent Config",
            "description": "config for trustless excution agent"
        }
    }
}