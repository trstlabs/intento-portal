syntax = "proto3";

package intento.alloc.v1;
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "amino/amino.proto";
import "cosmos/base/v1beta1/coin.proto";
option go_package = "github.com/trstlabs/intento/x/alloc/types";

// WeightedAddress defines an address with a weight.
message WeightedAddress {
  string address = 1 [ (gogoproto.moretags) = "yaml:\"address\"" ];
  string weight = 2 [
    (gogoproto.moretags) = "yaml:\"weight\"",
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// DistributionProportions defines the proportion that each bucket  receives.
message DistributionProportions {
  string developer_rewards = 1 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.moretags) = "yaml:\"developer_rewards\"",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  string community_pool = 2 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.moretags) = "yaml:\"community_pool\"",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  string relayer_incentives = 3 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.moretags) = "yaml:\"community_pool\"",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// Params defines the parameters for the alloc module.
message Params {
  // distribution_proportions defines the proportion of the minted denom
  DistributionProportions distribution_proportions = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];

  // addresses to receive developer rewards
  repeated WeightedAddress weighted_developer_rewards_receivers = 2 [
    (gogoproto.moretags) = "yaml:\"developer_rewards_receiver\"",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];

  // SupplementAmount is the amount to be supplemented from the pool on top of
  // newly minted coins.
  repeated cosmos.base.v1beta1.Coin supplement_amount = 4 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (amino.dont_omitempty) = true,
    (amino.encoding) = "legacy_coins",
    (gogoproto.moretags) = "yaml:\"supplement_amount\"",
    (gogoproto.nullable) = false
  ];
}